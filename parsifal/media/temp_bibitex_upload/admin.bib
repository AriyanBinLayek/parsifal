% This file was created with JabRef 2.9.2.
% Encoding: MacRoman

@ARTICLE{BenAbdallahBenLamine2005113,
  author = {Ben Abdallah Ben Lamine, S. and Labed Jilani, L. and Hajjami Ben
	Ghezala, H.},
  title = {Cost estimation for product line engineering using COTS components},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes
	in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year = {2005},
  volume = {3714 LNCS},
  pages = {113-123},
  note = {cited By (since 1996)3},
  __markedentry = {[vitorfs:3]},
  abstract = {Economic models for reuse are very important to organizations aiming
	to develop software with large scale reuse approaches. In fact, the
	initial investment is so important that it can discourage managers
	to commit to those approaches. Thus, economic models can help them
	to assess the worthiness of such an investment. Product Line Engineering
	(PLE) seems to be an attractive reuse approach in matter of product
	quality and time-to-market. Using Commercial Off The Shelf (COTS)
	in a PLE approach may have a positive impact. This paper reports
	on the need for an economic model to quantify the predicted benefits
	of the PLE software development with the use of COTS components.
	We introduce a Model for Software Cost Estimation in a Product Line
	Engineering approach that we denote SoCoEMo-PLE 2. This latter includes
	the usage of COTS components. The potential benefits of the model
	are described. © Springer-Verlag Berlin Heidelberg 2005.},
  affiliation = {Laboratoire Riadi-Gdl, Ecole Nationale des Sciences de l'Informatique,
	Campus Universitaire la Manouba, La Manouba, 2010, Tunisia},
  document_type = {Conference Paper},
  references = {Lim, W., Reuse economics: A comparison of seventeen models and directions
	for future research (1996) Proceedings, International Conference
	on Software Reuse, pp. 41-50. , Orlando FL; Wiles, E., (1999) Economic
	Models of Software Reuse: A Survey, Comparison and Partial Validation.
	Version 2.1, , Release, Report Reference: UWA-DCS-99-032, Department
	of Computer Science, University of Wales, Aberstwyth Ceredigion SY23
	3DB U.K; Chmiel, S.F., (2000) An Integrated Cost Model for Software
	Reuse, , Thesis for the obtention of PhD degree in computer science,
	Morgantown West Virginia; Mili, A., Chmiel, S.F., Gottumukkala, R.,
	Zhang, L., (2000) Managing Software Reuse Economics: An Integrated
	ROI-based Model, , CSEE Department, West Virginia University Morgantown
	WV 26506-6109 USA; Poulin, J., The economics of software product
	lines (1997) International Journal of Applied Software Technology;
	Ben Abdallah Ben Lamine, S., Modèle d'estimation de coûts pour
	le développement logiciel basé sur la réutilisation: Cas de l'approche
	PLE (2004) Computer Science Master, , RIADI Laboratory, National
	School of Computer Science, Tunis Tunisia; Ben Abdallah Ben Lamine,
	S., Labed Jilani, L., Hajjami Ben Ghezala, H., A software cost estimation
	model for product line engineering: SoCoEMo-PLE (2005) Proceedings,
	The 2005 International MultiConference in Computer Science and Computer
	Engineering, , Software Engineering Research and Practice conference
	SERP 2005, Las Vegas Nevada USA; Mili, H., Mili, A., Yacoub, S.,
	Edward, A., (2001) Reuse Based Software Engineering: Techniques,
	Organizations, and Measurement, p. 672. , John Wiley & Sons, Inc.,
	ISBN: 0-471-39819-5; Bosch, J., (2000) Design and Use of Software
	Architectures: Adopting and Evolving a Product Line Approach, p.
	354. , Addison-Wesley, Great Britain, ISBN 0-201-67494-7; Ben Abdallah
	Ben Lamine, S., Labed Jilani, L., Hajjami Ben Ghezala, H., Importance
	of knowledge engineering in cost estimation models for software reuse:
	Case of a software cost estimation model for product line engineering
	(2005) Proceedings, The Seventeenth International Conference on Software
	Engineering and Knowledge Engineering, , Taipei Taiwan China},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-33646198972&partnerID=40&md5=764ac2d5abc5210034a3befffe3c8d50}
}

@CONFERENCE{BenAbdallahBenLamine2005383,
  author = {Ben Abdallah Ben Lamine, S. and Labed Jilani, L. and Hajjami Ben
	Ghezala, H.},
  title = {A software cost estimation model for a product line engineering approach:
	Supporting tool and UML modeling},
  year = {2005},
  volume = {2005},
  pages = {383-390},
  note = {cited By (since 1996)0},
  abstract = {The Product Line Engineering approaches (PLE) to software development
	are promising in matter of quality, productivity and time-to-market.
	Some results achieved in industry can prove that. But managers need
	quantitative models reassuring them concerning the important initial
	investment they are going to commit. This paper reports on the need
	for such economic models for reuse as well as the underlying supported
	tools. Thus, we introduce a new Software Cost Estimation Model for
	Product Line Engineering that we denote as SoCoEMo-PLE. This model
	is based on two previous models: the integrated cost estimation model
	for reuse in general and Paulin's model for PLE. In fact, we present
	a new model which takes into account PLE software development cycle
	approach and takes some features of the two previous cost estimation
	models. The tool supporting SoCoEMo-PLE is described and an UML modeling
	is presented. Results of a preliminary experiment in the use of the
	model and the tool are reported. © 2005 IEEE.},
  affiliation = {Laboratoire Riadi-Gdl, Ecole Nationale des Sciences de l'Informatique,
	Campus Universitaire la Manouba, La Manouba, 2010, Tunisia},
  art_number = {1563187},
  document_type = {Conference Paper},
  journal = {Proceedings - Third ACIS International Conference on Software Engineering
	Research, Management and Applications, SERA 2005},
  references = {Barnes, B., Bollinger, T., Making Reuse Cost Effective (1991) IEEE
	Software, 8 (1), pp. 13-24. , January; Bollinger, T., Pfleeger, S.,
	Economics of Reuse: Issues and Alternatives (1990) Information and
	Software Technology, 32 (10), pp. 643-652. , December; Schimsky,
	D., Software Reuse: Some Realities (1992) Vitro Tech Journal, 10
	(1), pp. 47-57. , Summer; J. Margano, and T. Rhoads, Software Reuse
	Economics: Cost-Benefit Analysis on a Large Scale Ada Project, In
	Proceedings, International Conference on Software Engineering, Melbourne,
	Australia, 11-15 May 1992, pp. 338-348Poulin, J., Caruso, J., A Reuse
	Metrics and Return on Investment Model (1993) Advances in Software
	Reuse, Proceedings of the Second international Workshop on Software
	Reusability, pp. 152-166. , Lucca, Italy, 24-26 March; Lim, W., Effects
	of Reuse on Quality, Productivity and Economics (1994) IEEE Software,
	11 (5), pp. 23-30. , September; Favaro, J., Favaro, K., Favaro, P.F.,
	Value Based Software Reuse Investment (1998) Annals of Software Engineering,
	5, pp. 5-52; Kain, B., Measuring the ROI of Reuse (1994) Object Magazine,
	4 (3), pp. 49-54. , June; Malan, R., Wentzel, K., Economics of Reuse
	Revisited (1993), Technical Report, HPL-93-31, Hewlett Packard Laboratories,
	AprilGaffney, J., Durek, T., Software Reuse - Key to Enhanced Productivity:
	Some Quantitative Models (1989) Information and Software Technology,
	31 (5), pp. 258-267. , June; Kan, K., Levy, L., Software Methodology
	in the Harsh Light of Economics (1989) Information and Software Technology,
	31 (5). , June; Balda, O., Gustafson, D., Cost Estimation Models
	for the Reuse and Prototype Software Development Lifecycles (1990)
	ACM SIGSOFT Software Engineering Notes, 5 (3), pp. 42-50. , July;
	Boehm, B., Clark, B., Horowitz, E., Westland, C., Madachy, R., Selby,
	R., Cost Models for Future Software Lifecycle Processes: COCOMO 2.0
	(1995) Annals of Software Engineering, 1, pp. 57-94. , September;
	Cocots (1999), Center for Software Engineering, Technical Report,
	Los Angeles, CA, University of Southern California, JuneStevens,
	B., Linking Software Re-engineering and Reuse. An Economic Motivation
	(1993) CASE Trends, pp. 24-36. , March; G. Raymond, and D. Hollis,
	Software Reuse Economics Model, In Proceedings, Eighth Annual Washington
	Ada Symposium Summer SIGAda Meeting, McLean, VA, June 1991, pp. 141-155J.
	Gaffney, and R. Cruickschank, A General Economics Model of Software
	Reuse, In Proceedings, International Conference on Software Engineering,
	Melbourne, Australia, May 1992, pp. 327-337W. Lim, Reuse Economics:
	A Comparison of Seventeen Models and Directions for Future Research,
	In Proceedings, International Conference on Software Reuse, Orlando,
	FL, 23-26 April 1996, pp. 41-50W. Frakes, and C. Terry, Reuse Level
	Metrics, In Proceedings, Third International Conference on Software
	Reuse, Rio de Janeiro, Brazil, 1-4 November 1994, pp. 139-148P. Devanbu,
	S. Karstu, W. Melo, and W. Thomas, Analytical and Empirical Evaluation
	of Software Reuse Metrics, In Proceedings, International Conference
	on Software Engineering, Berlin, 1996Mili, R., Determining the Reuse
	Worthiness of a Component: Empirical and Analytical Approaches (1996),
	Dissertation, University of Ottawa, Ottawa, Ontario, Canada, DecemberPoulin,
	J., Caruso, J., A Reuse Metrics and Return on Investment Model (1993)
	Advances in Software Reuse, Proceedings of the Second international
	Workshop on Software Reusability, pp. 152-166. , Lucca, Italy, 24-26
	March; J. Favaro, A comparison of approaches to reuse investment
	analysis, In Proceedings, Fourth International Conference on Software
	Reuse, Orlando, FL, April 1996, pp. 136-145Chmiel, S.F., An Integrated
	Cost Model for Software Reuse (2000), thesis for the obtention of
	PhD degree in computer science, Morgantown, West VirginiaMili, A.,
	Chmiel, S.F., Gottumukkala, R., Zhang, L., (2000) Managing Software
	Reuse Economics: An Integrated ROI-based Model, pp. 26506-26109.
	, CSEE Department, West Virginia University, Morgantown, WV, USA,
	6 November; Poulin, J., The Economics of Software Product Lines (1997)
	International Journal of Applied Software Technology, , March; Carnegie
	Mellon University, Software Engineering Institute, A Framework for
	Software Product Line Practice Version 4.1S. Ben Abdallah Ben Lamine,
	Modèle d'estimation de coûts pour le développement logiciel basé
	sur la réutilisation: Cas de l'approche PLE, Computer science Master,
	RIADI-GDL Laboratory, National School of Computer Science, Tunis,
	Tunisia, 2004S. Ben Abdallah Ben Lamine, L. Labed Jilani, H. Hajjami
	Ben Ghezala, A Software Cost Estimation Model for Product Line Engineering:
	SoCoEMo-PLE, In Proceedings, The 2005 International MultiConference
	in Computer Science and Computer Engineering, Software Engineering
	Research and Practice conference 2005, Las Vegas, Nevada, USA, June
	27-30 2005S. Ben Abdallah Ben Lamine, L. Labed Jilani, H. Hajjami
	Ben Ghezala, Importance of Knowledge Engineering in Cost Estimation
	Models for Software Reuse: Case of a Software Cost Estimation Model
	for Product Line Engineering, In Proceedings, The Seventeenth International
	Conference on Software Engineering and Knowledge Engineering, Taipei,
	Taiwan, China, July 14-16, 2005Bosch, J., (2000) Design and use of
	software architectures: Adopting and evolving a product-line approach,
	, Addison-Wesley, Great Britain, ISBN 0-201-67494-7, 354p},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-33845973779&partnerID=40&md5=2ae61a9f0484ead438370cc75182088e}
}

@CONFERENCE{Boehm2004156,
  author = {Boehm, B. and Brown, A.W. and Madachy, R. and Yang, Y.},
  title = {A software product line life cycle cost estimation model},
  year = {2004},
  pages = {156-164},
  note = {cited By (since 1996)26},
  abstract = {Most software product line cost estimation models are calibrated only
	to local product line data rather than to a broad range of product
	lines. They also underestimate the return on investment for product
	lines by focusing only on development vs. life-cycle savings, and
	by applying writing-for-reuse surcharges to the entire product rather
	that to the portions of the product being reused. This paper offers
	some insights based on the exploratory development and collaborative
	refinement of a software product line life cycle economics model,
	the Constructive Product Line Investment Model (COPLIMO) that addresses
	these shortfalls. COPLIMO consists of two components: a product line
	development cost model and an annualized post-development life cycle
	extension. It focuses on modeling the portions of the software that
	involve product-specific newly-built software, fully reused black-box
	product line components, and product line components that are reused
	with adaptation. This model is an extension built upon USC-CSE's
	well-calibrated, multi-parameter Constructive Cost Model (COCOMO)
	II, tailored down to cover the essentials of strategic software product
	line decision issues and available supporting data from industries.},
  affiliation = {Center for Software Engineering, University of Southern California,
	United States},
  document_type = {Conference Paper},
  journal = {Proceedings - 2004 International Symposium on Empirical Software
	Engineering, ISESE 2004},
  references = {Boehm, B., Abts, C., Brown, A.W., Chulani, S., Clark, B.K., Horowitz,
	E., Madachy, R., Steece, B., (2000) Software Cost Estimation with
	COCOMO II, , Prentice Hall; Poulin, J., (1997) Measuring Software
	Reuse: Principles, Practices, and Economics Models, , Addison-Wesley;
	Reifer, D., (1997) Practical Software Reuse, , Wiley; Lim, W., (1998)
	Managing Software Reuse, , Prentice-Hall; Weiss, D., Lai, C.T.R.,
	(1999) Software Product-line Engineering: A Family-Based Software
	Development Process, , Addison-Wesley; Clements, P., Northrop, L.,
	(2002) Software Product Lines: Practices and Patterns, , Addison-Wesley;
	Gaffney, J.E., Cruickhank, R.D., A general economics model of software
	reuse (1992) Proceedings, of the 14th International Conference on
	Software Engineering, pp. 327-337. , NY: ACM, New York; Selby, R.W.,
	Empirically analyzing software reuse in a production environment
	(1988) Software Reuse: Emerging Technology, pp. 176-189. , W. Tracz
	(Ed.), IEEE Computer Society Press; Abts, C., Boehm, B.W., Bailey-Clark,
	E., COCOTS: A Software COTS-based System (CBS) Cost Model (2001)
	Proceeding of the European Software Control and Metrics (ESCOM) Conference,
	pp. 1-8. , London; Cohen, S., Predicting when product line investment
	pays (2003) Technical Note, , CMU/SEI-2003-TN-017, July; Jacobson,
	M.G., Jonsson, P., (1997) Software Reuse, , Addison-Wesley; Faulk,
	S.R., Harmon, R.R., Raffo, D.M., Value-based software engineering
	(VBSE): A value-driven approach to product-line engineering (2000)
	Proceedings of the First International Conference on Software Product-line
	Engineering, pp. 205-223. , MA: Kluwer Academic Publishers, Boston;
	Boehm, B., Value-based software engineering (2003) ACM Software Engineering
	Notes, 28 (2), pp. 1-12},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-11244335623&partnerID=40&md5=9f918078822076ce873410bab1a007ca}
}

@ARTICLE{In2006,
  author = {In, H.P.a and Baik, J.b and Kim, S.c and Yang, Y.d and Boehm, B.d
	e },
  title = {A quality-based cost estimation model for the product line life cycle},
  journal = {Communications of the ACM},
  year = {2006},
  volume = {49},
  number = {12},
  note = {cited By (since 1996)10},
  abstract = {Different aspect of quality-based SPL cost estimation (qCOPLIMO),
	a quality-based product line life cycle cost estimation model are
	discussed. The proposed model include the software quality cost in
	the SPL business case analysis and it consists of the two cost models,
	Relative Cost of Writing for Reuse (RCWR) for initial product line
	development and Realtive Cost for Reuse (RCR) model. RCWR is the
	added cost of writing software to be most cost-effectively reused
	across a product line family of applications, relative to the cost
	of writing a standalone application. RCR is the cost of reusing the
	software in a new application with the same product line family,
	relative to developing newly built software for the application.
	After the initial product is developed using product line engineering
	practice, the portion or the whole can be used for other products
	in the same product line. The proposed qCOPLIMO model provides a
	framework to estimate the effects of software quality cost.},
  affiliation = {College of Information and Communications, Korea University in Seoul,
	South Korea; School of Engineering, Information and Communications
	University (ICU), Daejeon, South Korea; College of Information and
	Communications, Korea University, Seoul, South Korea; Center for
	Systems and Software Engineering, University of Southern California,
	Los Angeles, United States; Department of Software Engineering, United
	States},
  art_number = {1183273},
  document_type = {Article},
  references = {Boehm, B., Abts, C., Brown, A.W., Chulani, S., Clark, B.K., Horowitz,
	E., Madachy, R., Steece, B., (2000) Software Cost Estimation with
	COCOMO II, , Prentice Hall; Boehm, B., Brown, A.W., Yang, Y., A software
	product line life cycle cost estimation model (2004) IEEE Proceeding
	of ISESE'04; Chulani, S., Boehm, B., Steece, B., Bayesian analysis
	of empirical software engineering cost models (1999) IEEE Transactions
	on Software Engineering, 25 (4), pp. 573-583; Clements, P., Northrop,
	L., (2002) Software Product Lines; Practices and Patterns, , Addison-Wesley;
	www.sci.cmu.edu/activities/plp/Jacobson, I., Griss, M.L., Jonsson,
	P., (1997) Software Reuse, , Addison Wesley; Lim, W., (1998) Managing
	Software Reuse, , Prentice-Hall; Poulin, J., (1997) Measuring Software
	Reuse; Principles, Practices, and Economics Models, , Addison-Wesley;
	Reifer, D.J., (1997) Practical Software Reuse, , Wiley, New York},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-33751574275&partnerID=40&md5=61b95cd95af73fd11a469da2c7225b37}
}

@CONFERENCE{Lamine2008524,
  author = {Lamine, S.B.A.B. and Jilani, L.L. and Ghezala, H.H.B.},
  title = {A software cost estimation meta-model for systematic reuse approaches},
  year = {2008},
  pages = {524-530},
  note = {cited By (since 1996)0},
  abstract = {PLE, CBSE and COTS-BD are systematic reuse approaches, where reuse
	is planned at the beginning of a project and is a large scale activity.
	Therefore, they need important initial investments. Cost estimation
	environments (models associated with supporting tools) can help the
	stakeholders to discover the strength of each large scale reuse approach,
	to better understanding them, to appreciate their promised benefits
	and choose between them for specific needs and contexts. In this
	paper, a software cost estimation meta-model is proposed for such
	approaches, as a result of an investigation showing the similarities
	between them. The meta-model adopts a four-cycle reuse investment.
	Variabilities between the approaches necessitate an instantiation
	of the meta-model for each of them. To quantify estimations, many
	techniques can be used, depending on the organization's needs, habits,
	available data, etc.},
  affiliation = {Laboratoire Riadi-Gdl, Ecole Nationale des Sciences de Ltnformatique,
	Campus Universitaire la Manouba, La Manouba, 2010, Tunisia},
  author_keywords = {CBSE; Cost estimation model; COTS; PLE},
  document_type = {Conference Paper},
  journal = {Proceedings of the 2008 International Conference on Software Engineering
	Research and Practice, SERP 2008},
  references = {Mili, H., Mili, A., Yacoub, S., Edward, A., (2001) Techniques, Organizations,
	and Measurement, , Reuse Based Software Engineering:, John Wiley
	and Sons, Inc, ISBN: 0-471-39819-5, 672 p; http://www.sei.cmu.edu/productlines/framework.html,
	P. Clements, L. Northrop, A Framework for Software Product Line Practice
	Version 4.1, CMU, SEI, 2005Mili, A., Chmiel, S.F., Gottumukkala,
	R., Zhang, L., Managing Software Reuse Economics: An Integrated ROI-based
	Model (2000) CSEE Department, pp. 26506-36109. , West Virginia University,
	Morgantown WV, USA; Clements, P.C., McGregor, J.D., Cohen, S.G.,
	The Structured Intuitive Model for Product Line Economics (SIMPLE),
	, CMU/SEI-2005-TR-003; Abts, C., Boehm, B., Clark, B.B., COCOTS:
	A COTS software integration cost model (2000) Proceedings, ESCOM-SCOPE
	2000 Conference, , Munich, Germany; Ben Abdallah, S., Lamine, B.,
	Labed Jilani, L., Louhichi, A., Hajjami Ben Ghezala, H., (2007) Software
	Product Line Economics: A Survey, , Proceedings, SERP, Las Vegas,
	Nevada, USA, June 26-29; Schmid, K., An Initial Model of Product
	Line Economics (2001) Lecture Notes In Computer Science, 2290. ,
	Revised Papers from PFE-4; Peterson, D., Economics of Software Product
	Lines (2003) Proceedings, PFE, , Siena, Italy, November, Berlin,
	Germany: Springer, 2004; S. Cohen, Predicting When Product Line Investment
	Pays, (CMU/SEI-2003-TN-017, ADA418466), Pittsburgh, PA: Software
	Engineering Institute, Carnegie Mellon University, 2003White, W.J.,
	Gallaher, M.P., (2002) Benefits and Costs of ATP Investments in Component-Based
	Software, , NIST GCR 02-834, Final Report submitted by RTI to ATP,
	NIST, November; Poulin, J., The Economics of Software Product Lines
	(1997) International Journal of Applied Software Technology, , March;
	B. Boehm, A. W. Brown, R. Madachy, and Y. Yang, A Software Product
	Line Life Cycle Cost EstimationModel", (2004) Proceedings, ISESE,
	, Redondo Beach, CA, August 19-20, Los Alamitos, CA: IEEE Computer
	Society, 2004; Smith, R.K., Effort Estimation in Component-Based
	Software Development: Identifying Parameters (1998) SIGCSE Doctoral
	Consortium; Peeples, J.N., A Software Development Cost Estimation
	Model for Higher Level Language Environments (2003) Proceedings,
	ABAS, , Vancouver, BC, Canada, June 24-26; Reifer, D.J., Web Development:
	Estimating Quick-to-Market Software (2000) IEEE Software, 17 (6),
	pp. 57-64; Paulish, D.J., (2001) A Practical Guide, , Architecture-Centric
	Software Project Management:, Addison-Wesley, Reading, MA, USA; Boehm,
	B., Abts, C., Chulani, S., Software Development Cost Estimation Approaches-A
	Survey (2000) Annals of Software Eng, 10, pp. 177-205},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-62749182323&partnerID=40&md5=9fe194bef49a198051616b17a7827bb6}
}

@CONFERENCE{Lamine2005649,
  author = {Lamine, S.B.A.B. and Jilani, L.L. and Ghezala, H.H.B.},
  title = {A Software Cost Estimation Model for Product Line Engineering: SoCoEMo-PLE},
  year = {2005},
  volume = {2},
  pages = {649-655},
  note = {cited By (since 1996)1},
  __markedentry = {[vitorfs:3]},
  abstract = {Economic models for reuse can help managers to forecast the benefits
	of a reuse investment before committing any resources. In this paper,
	we propose a Software Cost Estimation Model for Product Line Engineering
	(SoCoEMo-PLE). In fact, PLE approaches to software development seem
	to be very attractive in matter of product quality and time-tomarket.
	Thus, we need an economic model to quantify the predicted benefits
	of using such approach. In this paper, we present an introduction
	in section one. In section two, we present the economic models that
	were the basis of the development of SoCoEMo-PLE. Then, in section
	three, we detail the model SoCoEMo-PLE and recapitulate its contribution
	in a synthesis. We end with a conclusion in section four.},
  affiliation = {Laboratoire Riadi-Gdl, Ecole Nationale des Sciences de l'Informatique,
	Campus Universitaire la Manouba, La Manouba, 2010, Tunisia},
  author_keywords = {Cost Estimation Model; PLE; Software reuse},
  document_type = {Conference Paper},
  journal = {Proceedings of the 2005 International Conference on Software Engineering
	Research and Practice, SERP'05},
  references = {Barnes, B., Bollinger, T., Making Reuse Cost Effective (1991) IEEE
	Software, 8 (1), pp. 13-24. , January; Bollinger, T., Pfleeger, S.,
	Economics of Reuse: Issues and Alternatives (1990) Information and
	Software Technology, 32 (10), pp. 643-652. , December; Schimsky,
	D., Software Reuse: Some Realities (1992) Vitro Tech Journal, 10
	(1), pp. 47-57. , Summer; Margano, J., Rhoads, T., Software Reuse
	Economics: Cost-Benefit Analysis on a Large Scale Ada Project (1992)
	Proceedings, International Conference on Software Engineering, pp.
	338-348. , Melbourne, Australia, 11-15 May; Poulin, J., Caruso, J.,
	A Reuse Metrics and Return on Investment Model (1993) Proceedings
	of the Second international Workshop on Software Reusability, pp.
	152-166. , Advances in Software Reuse, Lucca, Italy, 24-26 March;
	Lim, W., Effects of Reuse on Quality, Productivity and Economics
	(1994) IEEE Software, 11 (5), pp. 23-30. , September; Favaro, J.,
	Favaro, K., Favaro, P.F., Value Based Software Reuse Investment (1998)
	Annals of Software Engineering, 5, pp. 5-52; Kain, B., Measuring
	the ROI of Reuse (1994) Object Magazine, 4 (3), pp. 49-54. , June;
	Malan, R., Wentzel, K., Economics of Reuse Revisited (1993), Technical
	Report HPL-93-3I, Hewlett Packard Laboratories, AprilGaffhey, J.,
	Durek, T., Software Reuse - Key to Enhanced Productivity: Some Quantitative
	Models (1989) Information and Software Technology, 31 (5), pp. 258-267.
	, June; Kang, K., Levy, L., Software Methodology in the Harsh Light
	of Economics (1989) Information and Software Technology, 31 (5).
	, June; Balda, O., Gustafson, D., Cost Estimation Models for the
	Reuse and Prototype Software Development Lifecycles (1990) ACM SIGSOFT
	Software Engineering Notes, 5 (3), pp. 42-50. , July; Boehm, B.,
	Clark, B., Horowitz, E., Westland, C., Madachy, R., Selby, R., Cost
	Models for Future Software Lifecycle Processes: COCOMO 2.0 (1995)
	Annals of Software Engineering, 1, pp. 57-94. , September; Cocots
	(1999), Center for Software Engineering, Technical Report, Los Angeles,
	CA, University of Southern California, JuneStevens, B., Linking Software
	Reengineering and Reuse. An Economic Motivation (1993) CASE Trends,
	pp. 24-36. , March; Raymond, G., Hollis, D., Software Reuse Economics
	Model (1991) Proceedings of Eighth Annual Washington Ada Symposium
	Summer SIGAda Meeting, pp. 141-155. , McLean, VA, June; Gaffhey,
	J., Cruickschank, R., A General Economics Model of Software Reuse
	(1992) Proceedings of International Conference on Software Engineering,
	pp. 327-337. , Melbourne, Australia, May; Lim, W., Reuse Economics:
	A Comparison of Seventeen Models and Directions for Future Research
	(1996) Proceedings, International Conference on Software Reuse, pp.
	41-50. , Orlando, FL, 23-26 April; Frakes, W., Terry, C., Reuse Level
	Metrics (1994) Proceedings of Third International Conference on Software
	Reuse, pp. 139-148. , Rio de Janeiro, Brazil, 1-4 November; Devanbu,
	P., Karstu, S., Melo, W., Thomas, W., Analytical and Empirical Evaluation
	of Software Reuse Metrics (1996) Proceedings, International Conference
	on Software Engineering, , Berlin; Mili, R., Determining the Reuse
	Worthiness of a Component: Empirical and Analytical Approaches (1996),
	Dissertation, University of Ottawa, Ottawa, Ontario, Canada, DecemberPoulin,
	J., Caruso, J., A Reuse Metrics and Return on Investment Model (1993)
	Advances in Software Reuse, Proceedings of the Second international
	Workshop on Software Reusability, pp. 152-166. , Lucca, Italy, 24-26
	March; Favaro, J., A comparison of approaches to reuse investment
	analysis (1996) Proceedings of Fourth International Conference on
	Software Reuse, pp. 136-145. , Orlando, FL, April; Chmiel, S.F.,
	An Integrated Cost Model for Software Reuse (2000), thesis for the
	obtention of PhD degree in computer science, Morgantown, West VirginiaMili,
	A., Chmiel, S.F., Gottumukkala, R., Zhang, L., (2000) Managing Software
	Reuse Economics: An Integrated ROI-based Model, pp. 26506-36109.
	, CSEE Department, West Virginia University, Morgantown, WV, USA,
	6 November; Poulin, J., The Economics of Software Product Lines (1997)
	International Journal of Applied Software Technology, , March; S.
	Ben Abdallah Ben Lamine, Modèle d'estimation de coûts pour le développement
	logiciel basé sur la réutilisation: Cas de l'approche PLE, Computer
	science Master, RIADI Laboratory, National School of Computer Science,
	Tunis, Tunisia, 26 January 2004Bosch, J., (2000) Design and use of
	software architectures: Adopting and evolving a productline approach,
	, Addison-Wesley, Great Britain, ISBN 0-201-67494-7, 354 p},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-60749108922&partnerID=40&md5=046c51348ecc94312e813acc07a903d7}
}

@CONFERENCE{Lavazza2008100,
  author = {Lavazza, L.A.a and Bianco, V.D.b and Garavaglia, C.c },
  title = {Model-based functional size measurement},
  year = {2008},
  pages = {100-109},
  note = {cited By (since 1996)0},
  abstract = {Function Point Analysis (FPA) is the most widely used method for measuring
	the size of software requirements, usually for the purpose of cost
	estimation. Unfortunately, FPA is affected by several drawbacks:
	it must be performed by specifically skilled personnel, it is expensive,
	and the resulting measures are subject to high variability. In order
	to solve -at least partially- these problems, researchers have proposed
	to base FP counting on UML models. However, models built without
	having FPA in mind hardly provide the required information at the
	proper detail level, so that the measures of the models tend to vary
	accordingly. On the contrary, building models that are suitable for
	FPA generally requires additional notations, skills and effort, thus
	partly spoiling the advantages of the approach. This paper illustrates
	a technique for building FPA-oriented UML models that do not need
	to include more information than usually required by the development
	process, and are easy to measure. As a result, FPA can be performed
	in a seamless way, while yielding reliable results. The proposed
	technique was validated by means of a controlled experiment and a
	set of pilot applications, which are also briefly described in the
	paper. Copyright 2008 ACM.},
  affiliation = {CEFRIEL, University of Insubria, Via Mazzini, 5, 21100 Várese, Italy;
	University of Insubria, Via Mazzini, 5, 21100 Varese, Italy; Syrea
	- Intecs, Via Archimede, 10, 20100 Milano, Italy},
  author_keywords = {Function point analysis; Functional size measurement; Requirements
	modeling; UML},
  document_type = {Conference Paper},
  journal = {ESEM'08: Proceedings of the 2008 ACM-IEEE International Symposium
	on Empirical Software Engineering and Measurement},
  references = {(2004) Function Point Counting Practices Manual, , International Function
	Point Users Group, Release 4.2; Albrecht, A.J., Measuring Application
	Development Productivity (1979) Joint SHARE/GUIDE/IBM Application
	Development Symposium; Unified Modeling Language: Infrastructure
	(2006) OMG formal/05-07-05, , Object Management Group, March; Object
	Management Group. Unified Modeling Language: Superstructure v. 2.0.
	OMG formal/05-07-04. August 2005Antoniol, G., Lokan, C., Caldiera,
	G., Fiutem, R., A Function Point-Like Measure for Object-Oriented
	Software (1999) Empirical Software Engineering, 4, p. 3. , Sept;
	Costagliola, G., Ferrucci, F., Tortora, G., Vitiello, G., Class Point:
	An Approach for the Size Estimation of Object-Oriented Systems (2005)
	IEEE Trans. On Software Engineering, 31, p. 1. , Jan; Iorio, T.,
	IFPUG Function Point Analysis in an UML Framework (2004) Software
	Metrics European Forum (Rome, January 2004); del Bianco, V., Lavazza,
	L., An Empirical Assessment of Function Point-Like Object-Oriented
	Metrics (2005) 11 th Int. Software Metrics Symposium, , Como, Sept;
	IEC19761:2003 Software Engineering - COSMIC-FFP-A Functional Size
	Measurement Method. ISO, (2003), ISOSoftware engineering - IFPUG
	4.1 Unadjusted functional size measurement method - Counting Practices
	Manual. ISO, 2003 (2003), ISO/IEC 20926Fraternali, P., Tisi, M.,
	Bongio, A., Automating Function Point Analysis with Model Driven
	Development (2006) Conference of the Center for Advanced Studies
	on Collaborative Research, , Toronto, October; Kitchenham, B.A.,
	The problem with function points (1997) IEEE Software, 14, p. 2.
	, March-April; Low, G.C., Jeffery, D.R., Function points in the estimation
	and evaluation of the software process (1990) IEEE Trans. on Software
	Engineering, 16, p. 1. , Jan; Uemura, T., Kusumoto, S., Inoue, K.,
	Function Point Measurement Tool for UML Design Specification (1999)
	Int. Symp. on Software Metrics, , Boca Raton, Nov; Cantone, G., Pace,
	D., Calavaro, G., Applying Function Point to Unified Modeling Language:
	Conversion Model and Pilot Study (2004) 10 th Int. Symp. on Software
	Metrics, , Chicago, September; Mendes, O., Abran, A., Bourque, P.,
	(1996) Function Point Tool Market Survey 1996, , Software Engineering
	Management Laboratory, Université du Quebec à Montreal; Cantone
	G. 2000 Measure-driven Processes and Architecture for the Empirical
	Evaluation of Software Technology. J. of Software Maintenance, 12,
	1 (Jan.-Feb. 2000)Briand, L., Morasca, S., Basili, V.R., Property-Based
	Software Engineering Measurement (1995) IEEE Trans. Software Eng,
	21, p. 1. , January; Buglione, L., (2008) Misurare il software, ,
	Franco Angeli, in Italian; Oligny, S., Abran, A., On the compatibility
	between Full Function Points and IFPUG Function Points (1999) 10
	th ESCOM, , Herstmonceux Castle, April; Fetcke, T., Abran, A., Nguyen,
	T.H., Mapping the OO-Jacobson approach into function point analysis
	(1997) Technology of O-O Languages and Systems, , Santa Barbara,
	July-August; Lavazza, L., Garavaglia, C., Using Function Point in
	the Estimation of Real-Time Software: An Experience (2008) Software
	Measurement European Forum (Milano, May 2008); del Bianco, V., Gentile,
	C., Lavazza, L., An Evaluation of Function Point Counting Based on
	Measurement-Oriented Models (2008) Evaluation and Assessment in Software
	Engineering, , Bari, June; Levesque, G., Bevo, V., and De Tran Cao
	2008 Estimating Software Size with UML Models. C 3S 2E conference
	(Montreal, May 2008)Lamma, E., Mello, P., Riguzzi, F., A System for
	Measuring Function Points from an ER-DFD Specification (2004) The
	Computer Journal, 47, p. 3; Fischman, L., McRitchie, K., Galorath,
	D.D., Inside SEER-SEM (2005) CrossTalk, The Journal of Defense Software
	Engineering, , April},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-62949189583&partnerID=40&md5=f6bc08aae87f560ef4e1528a1f3276d8}
}

@ARTICLE{Nolan2010121,
  author = {Nolan, A.J.a and Abrahão, S.b },
  title = {Dealing with cost estimation in software product lines: Experiences
	and future directions},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes
	in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year = {2010},
  volume = {6287 LNCS},
  pages = {121-135},
  note = {cited By (since 1996)1},
  abstract = {After 5 years invested in developing accurate cost estimation tools,
	Rolls-Royce has learnt about the larger potential of the tools to
	shape many aspects of the business. A good estimation tool is a "model"
	of a project and is usually used to estimate cost and schedule, but
	it can also estimate and validate risks and opportunities. Estimation
	tools have unified engineering, project and business needs. The presence
	of good estimation tools has driven higher performance and stability
	in the business. It was evident we needed this capability to underpin
	decisions in our new Software Product Line strategy. The objective
	of this paper is twofold. First, we report the experiences gained
	in the past on the use of estimation tools. Second, we describe the
	current efforts and future directions on the development of an estimation
	tool for Software Product Lines. At the heart of the Product Line
	estimation tool is a simple representation of the product - represented
	as the number of Lines Of Code (LOC). The next generation of tool,
	will need to consider wider aspects of product quality in order to
	create more accurate estimates and support better decisions about
	our products. © 2010 Springer-Verlag Berlin Heidelberg.},
  affiliation = {Rolls-Royce, SIN C-3, Rolls-Royce plc PO Box 31, Derby DE24 8BJ, United
	Kingdom; ISSI Research Group, Department of Computer Science, Universidad
	Politécnica de Valencia, Camino de Vera s/n, Valencia 46022, Spain},
  author_keywords = {Cost Estimation; Industrial Experiences; Software Product Lines},
  document_type = {Conference Paper},
  references = {Böckle, G., Clements, P., McGregor, J.D., Muthig, D., Schmid, K.,
	Calculating ROI for software product lines (2004) IEEE Software,
	, May/June; Boehm, B., Abts, C., Brown, A.W., Chulani, S., Clark,
	B.K., Horowitz, E., Madachy, R., Steece, B., (2000) Software Cost
	Estimation With COCOMO II, , Prentice-Hall, Englewood Cliffs; Boehm,
	B., (1981) Software Engineering Economics, , Prentice-Hall, Englewood
	Cliffs; Boehm, B., Brown, A.W., Madachy, R., Yang, Y., A software
	product line life cycle cost estimation model (2004) Proceedings
	of the International Symposium on Empirical Software Engineering
	(ISESE 2004), pp. 156-164; Chen, Y., Gannod, G.C., Collofello, J.S.,
	Software product line process simulator (2005) 6th Int. Workshop
	on Software Process Simulation and Modeling, , May; Clements, P.,
	Northrop, L., (2001) Software Product Lines: Practices and Patterns,
	, Addison-Wesley, Boston; Clements, P., McGregor, J.D., Cohen, S.G.,
	(2005) The Structured Intuitive Model for Product Line Economics
	(SIMPLE), CMU/SEI-2005-TR-003; Cohen, S., (2003) Predicting When
	Product Line Investment Pays, , Technical Note, CMU/SEI-2003-TN-017;
	In, H.P., Baik, J., Kim, S., Yang, Y., Boehm, B., A quality-based
	cost estimation model for the product line life cycle (2006) Communications
	of the ACM, 49 (12). , December; Lamine, S.B.A.B., Jilani, L.L.,
	Ghezala, H.H.B., A software cost estimation model for a product line
	engineering approach: Supporting tool and UML modeling (2005) 3rd
	ACIS Int. Conf. on Software Engineering Research, , Management and
	Applications; Mili, A., Chmiel, S.F., Gottumukkala, R., Zhang, L.,
	An integrated cost model for software reuse (2000) Proc. of the 22nd
	International Conference on Software Engineering, pp. 157-166. ,
	Limerick, Ireland, ACM Press, New York; Montagud, S., (2009) A SQuaRE-based
	Quality Evaluation Method for Software Product Lines, , MSc. Thesis,
	PhD Program on Software Engineering, Formal Methods and Information
	Systems, Dept. of Computer Science, Universidad Politécncia de Valencia,
	Dic; Nóbrega, J.P., Almeida, E.S., Meira, S., InCoME: Integrated
	cost model for product line engineering (2008) Proceedings of the
	34th Euromicro Conference Software Engineering and Advanced Applications
	(SEAA 2008), pp. 27-34; Nolan, A.J., Building a comprehensive software
	product line cost model (2009) Proceedings of the 13th International
	Software Product Line Conference (SPLC 2009), , McGregor, J. D.,
	Muthing, D. eds., San Francisco-CA, USA. IEEE Press, Los Alamitos;
	Ozkaya, I., Bass, L., Nord, R.L., Sangwan, R.S., Making practical
	use of quality attribute information (2008) IEEE Software, pp. 25-33.
	, March/April; Poulin, J.S., (1997) The Economics of Product Line
	Development, , http://home.stny.rr.com/jeffreypoulin/Papers/IJAST97/ijast97.html;
	Schackmann, H., Lichter, H., (2006) International Workshop on Software
	Product Management (IWSPM 2006 - RE 2006 Workshop), , A Cost-Based
	Approach to Software Product Line Management. Minneapolis/St. Paul,
	Minnesota; Schmid, K., An initial model of product line economics
	(2001) Proceedings of the 4th International Workshop on Product Family
	Engineering (PFE-4), pp. 38-50; Tomer, A., Goldin, L., Kuflik, T.,
	Kimchi, E., Schach, S.R., Evaluating software reuse alternatives:
	A model and its application to an industrial case study (2004) IEEE
	Transactions on Software Engineering, 30 (9). , September},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-78049373099&partnerID=40&md5=2733004bbe7f9e36f5ede375336a08ab}
}

@CONFERENCE{Nolan2011203,
  author = {Nolan, A.J.a and Abrahão, S.b and Clements, P.c and McGregor, J.D.d
	and Cohen, S.c },
  title = {Towards the integration of quality attributes into a software product
	line cost model},
  year = {2011},
  pages = {203-212},
  note = {cited By (since 1996)0},
  abstract = {A good estimation tool offers a "model" of a project and is usually
	used to estimate cost and schedule, but it can also be used to help
	make trade decisions that affect cost and schedule as well as to
	estimate risks and opportunities. It was evident that Rolls-Royce
	needed a cost model to underpin decisions when they launched a Software
	Product Line initiative. The first generation cost model was based
	on COCOMO II, which represents the software product as a single size
	measure (Source Lines of Code) but makes limited use of the architecture
	or any characteristics of the product being developed. The next generation
	of the cost model, currently under development, is intended to account
	for the quality attributes of the core assets and the resulting products
	in order to estimate their impact on cost and net-benefit to the
	business. The objective of this paper is to describe our current
	efforts to integrate key quality attributes into the SPL cost model.
	We describe the quality attributes selected, the reason for their
	selection and the benefits we expect to obtain after integrating
	them into the model. © 2011 IEEE.},
  affiliation = {Rolls-Royce, SIN C-3, Rolls-Royce Plc, PO Box 31, Derby DE24 8BJ,
	United Kingdom; Dept. of Computer Science, Universitat Politècnica
	de València, Camino de Vera s/n, 46022 Valencia, Spain; Software
	Engineering Institute, Carnegie Mellon University, 4500 5th Avenue,
	Pittsburgh, PA 15213-2616, United States; Dept. of Computer Science,
	312 McAdams Hall, Clemson University, Clemson, SC, United States},
  art_number = {6030062},
  author_keywords = {Cost Estimation; Industrial Experiences; Quality Attributes; Safety-Critical
	Software; Software Product Lines},
  document_type = {Conference Paper},
  journal = {Proceedings - 15th International Software Product Line Conference,
	SPLC 2011},
  references = {Aldekoa, G., Trujillo, S., Sagardui, G., Diaz, O., Quantifying Maintainability
	in Feature Oriented Product Lines Proc. of the 12th European Conference
	on Software Maintenance and Reengineering (CSMR 2008), Athens, Greece,
	2008, pp. 243-247; Bachmann, F., Clements, F.P.C., (2005) Variability
	in Software Product Lines, , CMU/SEI-2005-TR-012; Barbacci, M.R.,
	Ellison, R., Lattanze, A.J., Stafford, J.A., Weinstock, C.B., Wood,
	W.G., (2003) Quality Attribute Workshops (QAWs), , Third Edition,
	CMU/SEI-2003-TR-016; Böckle, G., Clements, G.P., McGregor, J.D.,
	Muthig, D., Schmid, K., Calculating ROI for Software Product Lines
	(2004) IEEE Software, , May/June; Boehm, B., Abts, C., Brown, A.W.,
	Chulani, S., Clark, B.K., Horowitz, E., Madachy, R., Steece, B.,
	(2000) Software Cost Estimation with COCOMO II, , Prentice-Hall;
	Boehm, B., Brown, A.W., Madachy, R., Yang, Y., A Software Product
	Line Life Cycle Cost Estimation Model (2004) Proc. of the Int. Symposium
	on Empirical Software Engineering, pp. 156-164; Bosch, J., Maturity
	and Evolution in Software Product Lines: Approaches, Artefacts and
	Organization (2002) Proc. of Software Product Line Conference (SPLC
	2002), pp. 257-271. , G. Chastek (Ed.); Clements, P., Northrop, N.,
	(2001) Software Product Lines: Practices and Patterns, , Addison-Wesley,
	Boston; Clements, P., McGregor, J.D., Cohen, S.G., (2005) The Structured
	Intuitive Model for Product Line Economics (SIMPLE), , CMU/SEI- 2005-TR-003;
	(1992) Software Considerations in Airborne Systems and Equipment
	Certification, , EUROCAE ED-12B/RTCA/DO-178B; Hutchesson, S., McDermid,
	J., Development of High-Integrity Software Product Lines Using Model
	Transformation (2010) Proceedings of the 29th International Conference
	on Computer Safety, Reliability, and Security (SAFECOMP'10), pp.
	389-401. , Springer-Verlag; In, H.P., Baik, J., Kim, S., Yang, Y.,
	Boehm, B., A Quality-Based Cost Estimation Model for the Product
	Line Life Cycle (2006) Communications of the ACM, 49 (12). , December;
	(2010) Systems and Software Engineering - Systems and Software Product
	Quality Requirements and Evaluation (SQuaRE) - System and Software
	Quality Models, , ISO/IEC FCD 25010; Lamine, S.B., Jilani, L.L.,
	Ghezala, H.H.B., A Software Cost Estimation Model for a Product Line
	Engineering Approach: Supporting tool and UML Modeling 3rd ACIS Conf.
	on Software Engineering Research, Management and Applications, 2005;
	McGregor, J.D., (2003) The Evolution of Product Line Assets, , CMU/SEI-
	2003-TR-005; Nóbrega, J.P., Almeida, E.S., Meira, S., InCoME: Integrated
	Cost Model for Product Line Engineering Proc. of the 34th Euromicro
	Software Engineering and Advanced Applications, 2008, pp. 27-34;
	Nolan, A.J., Building a Comprehensive Software Product Line Cost
	Model (2009) Proc. of the 13thInternational Software Product Line
	Conference (SPLC 2009), San Francisco-CA, USA, , J. D. McGregor and
	D. Muthing (Eds.), IEEE Press; Nolan, A.J., Abrahão, S., Dealing
	with Cost Estimation in Software Product Lines: Experiences and Future
	Directions (2010) Proc. of the 14th International Software Product
	Line Conference (SPLC 2010), Jeju Island, South Korea, pp. 121-135.
	, Springer; Poulin, J.S., (1997) The Economics of Product Line Development,
	, http://home.stny.rr.com/jeffreypoulin/Papers/IJAST97/ijast97.html;
	Schmid, K., An Initial Model of Product Line Economics Proc. of the
	4th International Workshop on Product Family Engineering (PFE- 4),
	2001, pp. 38-50; Her, J.S., Kim, J.H., Oh, S.H., Rhew, S.Y., Kim,
	S.D., A framework for evaluating reusability of core asset in product
	line engineering (2007) Information and Software Technology, 49,
	pp. 740-760; Tomer, A., Goldin, L., Kuflik, T., Kimchi, E., Schach,
	S.R., Evaluating Software Reuse Alternatives: A Model and Its Application
	to an Industrial Case Study (2004) IEEE TSE, 30 (9). , September;
	Zhang, T., Deng, L., Wu, J., Zhou, Q., Ma, C., Some Metrics for Accessing
	Quality of Product Line Architecture Proc. International Conference
	on Computer Science and Software Engineering (CSSE), Wuhan, China,
	2008, pp. 500-503},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-80054064419&partnerID=40&md5=20e6f4d0003bc112680f98263dc45c6d}
}

@CONFERENCE{Nonaka200763,
  author = {Nonaka, M.a and Babar, M.A.b and Zhu, L.c and Staples, M.c },
  title = {Impacts of architecture and quality investment in software product
	line development},
  year = {2007},
  pages = {63-73},
  note = {cited By (since 1996)1},
  abstract = {Investment in architecture and quality improvement for a software
	product line can increase reuse, and consequently reduce effort,
	enhance product reliability, and shorten time-to-market. Such investments
	should be carefully chosen to be effective, to avoid over-investment,
	and to return benefits within the desired time. In this paper, we
	show how a stochastic simulation model can be used to explore the
	impacts of such investments. The model is validated by comparison
	to COPLIMO, a COCOMO II based effort estimation model for product
	line development, and by inspecting effort distributions of the generated
	unplanned work. For the illustrative model and scenarios in this
	paper, we show that the degree of architecture reuse has the largest
	impact. Preventing degraded architectural dependencies itself does
	not have a meaningful impact, but if such degradation is also associated
	with adverse effects on defect injection and detection, it can be
	significant. Process improvement has a meaningful impact, but over-investment
	is possible. © 2007 IEEE.},
  affiliation = {Toyo University, Japan; Lero, University of Limerick, Ireland; National
	ICT Australia},
  art_number = {4339256},
  document_type = {Conference Paper},
  journal = {Proceedings - 11th International Software Product Line Conference,
	SPLC 2007},
  references = {Agrawal, M., Chari, K., Software effort, quality, and cycle time:
	A study of cmm level 5 projects (2007) IEEE Trans. Softw. Eng, 33
	(3), pp. 145-156; AitSahlia, F., Johnson, E., Will, P., Is concurrent
	engineering always a sensible proposition? (1995) IEEE Trans. Eng.
	Manage, 42 (2), pp. 166-170; Benediktsson, O., Dalcher, D., Effort
	estimation in incremental software development (2003) IEE Proc. Softw.
	Eng, 150 (6), pp. 351-357; Benediktsson, O., Dalcher, D., Reed, K.,
	Woodman, M., Cocomo-based effort estimation for iterative and incremental
	software development (2003) Software Quality Journal, 11 (4), pp.
	265-281; Bianchi, A., Caivano, D., Lanubile, F., Visaggio, G., Evaluating
	software degradation through entropy (2001) Proc. 7th Intl. Symp.
	Softw. Metrics (METRICS'01), pp. 210-219; Bockle, G.N., Clements,
	P., McGregor, J.D., Muthig, D., Schmid, K., Calculating roi for software
	product lines (2004) IEEE Software, 21 (3), pp. 32-38; Boceo, M.G.,
	Moody, D.L., Piattini, M., Assessing the capability of internal metrics
	as early indicators of maintenance effort through experimentation
	(2005) J. Software Maintenance and Evolution, 17 (3), pp. 225-246;
	Boehm, B.W., (1981) Software Engineering Economics, , Prentice Hall,
	Englewood Cliffs, N.J; Boehm, B.W., Abts, C., Brown, A.W., Chulani,
	S., Clark, B.K., Horowitz, E., Madachy, R., Steece, B., (2000) Software
	Cost Estimation with COCOMO II, , Prentice Hall; Boehm, B.W., Brown,
	A.W., Madachy, R., Yang, Y., A software product line life cycle cost
	estimation model (2004) Proc. 2004 Intl. Symp. Empirical Softw. Eng.
	(ISESE'04), pp. 156-164; Bosch, J., Maturity and evolution in software
	product lines: Approaches, artefacts and organization (2002) Proc.
	2nd Intl. Conf. Softw. Product Lines, pp. 257-271; Brooks Jr., F.,
	(1995) The Mythical Man-Month: Essays on Software Engineering, 20th
	Anniversary Edition, , Addison-Wesley, Reading, MA; Browning, T.R.,
	Eppinger, S.D., Modeling impacts of process architecture on cost
	and schedule risk in product development (2002) IEEE Trans. Eng.
	Manage, 49 (4), pp. 428-442; Chen, Y., Gannod, G.C., Collofello,
	J.S., A software product line process simulator (2006) Softw. Process
	Improve. Pract, 11, pp. 385-409; Cho, S.-H., Eppinger, S.D., A simulation-based
	process model for managing complex design projects (2005) IEEE Trans.
	Eng. Manage, 52 (3), pp. 316-328; Clements, P., Northrop, L.M., (2001)
	Software Product Lines: Practices and Patterns, , Addison-Wesley,
	MA; S. Cohen. Predicting when product line investment pays. Technical
	Report Techinical Report CMU/SEI-2003-TN-017, Software Engineering
	Institute, Carnegie Mellon University, 2003Cusumano, M., MacCormack,
	A., Kemerer, C.F., Crandall, W., Software development worldwide:
	The state of the practice (2003) IEEE Software, 20 (6), pp. 28-34;
	Defamie, M., Jacobs, P., Thollembeck, J., Software reliability: Assumptions,
	realities and data (1999) Proc. 1999 Intl. Conf. Softw. Maintenance
	(ICSM'99), pp. 337-345; Epping, A., Lott, C.M., Does software design
	complexity affect maintenance effort? (1994) Proc. 19th Softw. Eng.
	Workshop, pp. 297-313; Genuchten, M.V., Why is software late? an
	empirical study of reasons for delay in software development (1991)
	IEEE Trans. Softw. Eng, 17 (6); Ha, A.Y., Porteus, E.L., Optimal
	timing of reviews in concurrent design for manufacturability (1995)
	Manage. Sci, 41 (9), pp. 1431-1447; Humphrey, W.S., (1999) Introduction
	to the Team Software Process, , Addison-Wesley, Reading, MA; Jorgensen,
	M., Realism in assessment of effort estimation uncertainty: It matters
	how you ask (2004) IEEE Trans. Softw. Eng, 2004 (30), pp. 209-217;
	Kan, S.H., Dull, S.D., Amundson, D.N., Lindner, R.J., Hedger, R.J.,
	As/400 software quality management (1994) IBM Systems Journal, 33
	(1), pp. 62-88; Kara, S., Kayis, B., Kaebernick, H., Modelling concurrent
	engineering projects under uncertainty (1999) Concurrent Engineering,
	7 (3), pp. 269-274; H. Krasner. Using the cost of quality approach
	for software. CrossTalk: J. Defense Softw. Eng., November:6-l 1,
	1998Krishnan, V., Eppinger, S., Whitney, D., A model-based framework
	to overlap product development activities (1997) Manage. Sci, 43
	(4), pp. 437-451; Krueger, C., Eliminating the adoption barrier (2002)
	IEEE Software, 19 (4), pp. 29-31; Lehman, M.M., Belady, L., (1985)
	Program Evolution - Processes of Software Change, , Academic Press,
	London; Mohagheghi, P., Conradi, R., Killi, O.M., Schwarz, H., An
	empirical study of software reuse vs. defect-density and stability
	(2004) Proc. 26th Intl. Conf. Softw. Eng. (ICSE2004), pp. 282-292;
	Moløkken, K., Jorgensen, M., A comparison of software project overruns-flexible
	versus sequential development models (2005) IEEE Trans. Softw. Eng,
	31 (9), pp. 754-766; Nonaka, M., Zhu, L., Ali Babar, M., Staples,
	M., Project cost overrun simulation in software product line development
	(2007) Proc. 2007 Product Focused Softw. Development and Process
	Improvement (Profes2007), , to appear; Nonaka, M., Zhu, L., Ali Babar,
	M., Staples, M., Project delay variability simulation in software
	product line development (2007) Proc. 2007 Intl. Conf. Softw. Process
	(ICSP2007), , to appear; Norden, P., Curve fitting for a model of
	applied research and development scheduling (1958) IBM J. Research
	and Development, 3 (2), pp. 232-248; Nurmuliani, N., Zowghi, D.,
	Fowell, S., Analysis of requirements volatility during software development
	life cycle (2004) Proc. 2004 Australian Softw. Eng. Conf. (ASWEC'04);
	Pillai, K., Nair, V.S., A model for software development effort and
	cost estimation (1997) IEEE Trans. Softw. Eng, 23 (8), pp. 485-497;
	Putnam, L., A general empirical solution to the macro software sizing
	and estimation problem IEEE Trans. Softw. Eng, 345-361, p. 1978.
	, July; Ramanujan, S., Scamell, R.W., Shah, J.R., An experimental
	investigation of the impact of individual, program, and organizational
	characteristics on software maintenance effort (2000) J. Systems
	and Software, 54, pp. 137-157; Remus, H., Integrated software validation
	in the view of inspections / reviews (1983) Proc. Symposium on Softw.
	Validation, pp. 57-64. , Elsevier; Schmid, K., Biffl, S., Systematic
	management of software product lines (2005) Softw. Process Improve.
	Pract, 10, pp. 61-76; Schmid, K., Verlage, M., The economic impact
	of product line adoption and evolution (2002) IEEE Software, 19 (4),
	pp. 50-57; (1997) Sel (software engineering laboratory) data, , http://www.cebase.org,
	SEL; Subramanian, G.H., Breslawski, S., An empirical analysis of
	software effort estimate alterations (1995) J. Systems and Software,
	31 (2), pp. 135-141},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-47949121286&partnerID=40&md5=c559c7f4c976384c5a8faaff296451d1}
}

@ARTICLE{Nonaka2007283,
  author = {Nonaka, M.a and Liming, Z.b and Babar, M.A.c and Staples, M.b },
  title = {Project delay variability simulation in software product line development},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes
	in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year = {2007},
  volume = {4470 LNCS},
  pages = {283-294},
  note = {cited By (since 1996)0},
  abstract = {The possible variability of project delay is useful information to
	understand and mitigate the project delay risk. However, it is not
	sufficiently considered in the literature concerning effort estimation
	and simulation in software product line development. In this paper,
	we propose a project delay simulation model by introducing a random
	variable to represent the variability of adaptive rework. The model
	has been validated through stochastic simulations by comparing generated
	adaptive rework to an actual change effort distribution, and by sensitivity
	analysis. The result shows that the proposed model is capable of
	producing reasonable variability of adaptive rework, and consequently,
	variability of project delay. Analysis of our model indicates that
	the strength of dependency has a larger impact than the number of
	residual defects, for the studied simulation settings. However, high
	levels of adaptive rework variability did not have great impact on
	overall project delay. © Springer-Verlag Berlin Heidelberg 2007.},
  affiliation = {Faculty of Business Administration, Toyo University, Japan; National
	ICT Australia, Australia; Lero, University of Limerick, Ireland},
  author_keywords = {Process simulation; Product quality; Project planning; Software product
	line development},
  document_type = {Conference Paper},
  references = {Clements, P., Northrop, L.M., (2001) Software Product Lines: Practices
	and Patterns, , Addison-Wesley, MA; Schmid, K., Biffl, S.: Systematic
	management of software product lines. Softw. Process Improve. Pract.
	10 (2005) 61-76Genuchten, M.V., Why is software late? an empirical
	study of reasons for delay in software development (1991) IEEE Trans.
	Softw. Eng, 17 (6); Subramanian, G.H., Breslawski, S., An empirical
	analysis of software effort estimate alterations (1995) J. Systems
	and Software, 31 (2), pp. 135-141; Dijkstra, E., Notes on structured
	programming (1972) Structured Programming, , Dahl, O.J, Dijkstra,
	E, Hoare, C.A.R, eds, Academic Press, London; (1998) Ieee std, pp.
	1219-1998. , IEEE:, ieee standard for software maintenance; Nonaka,
	M., Azuma, M., Software delivery estimation model for incremental
	and iterative development process considering undetected design defects
	(in Japanese) (2003) Proc. Software Symposium, pp. 107-114; Jørgensen,
	M., Realism in assessment of effort estimation uncertainty: It matters
	how you ask (2004) IEEE Trans. Softw. Eng, 2004 (30), pp. 209-217;
	Boehm, B.W., Abts, C., Brown, A.W., Chulani, S., Clark, B.K., Horowitz,
	E., Madachy, R., Steece, B., (2000) Software Cost Estimation with
	COCOMO II, , Prentice Hall; Boehm, B.W., Brown, A.W., Madachy, R.,
	Yang, Y.: A software product line life cycle cost estimation model.
	Proc. 2004 Intl. Symp. Empirical Softw. Eng. (ISESE'04) (2004) 156-164Chen,
	Y., Gannod, G.C., Collofello, J.S.: A software product line process
	simulator. Softw. Process Improve. Pract. 11 (2006) 385-409Yang,
	D., Wan, Y., Tang, Z., Wu, S., He, M., Li, M., Cocomo-u: An extension
	of cocomo ii for cost estimation with uncertainty (2006) Lecture
	Notes in Computer Science, 3966, pp. 132-141; Donzelli, P., A decision
	support system for software project management (2006) IEEE Software,
	23 (4), pp. 67-75; Abdel-Hamid, T., Madnick, S., (1991) Software
	Project Dynamics- An Integrated Approach, , Prentice-Hall, Englewood
	Cliffs, NJ; Calavaro, G.F., Basili, V.R., Iazeolla, G., Simulation
	modeling of software development process (1995) Proc. 7th European
	Simulation Symposium, , Soc. for Computer Simulation; Hansen, G.A.,
	Simulating software development processes (1996) IEEE Computer, 29
	(1), pp. 73-77; Antoniol, G., Cimitile, A., Lucca, G.A., Penta, M.,
	Assessing staffing needs for a software maintenance project through
	queuing simulation (2004) IEEE Trans. Software Eng, 30 (1), pp. 43-58;
	Padberg, F.: A study on optimal scheduling for software projects.
	Softw. Process Improve. Pract. 11 (2006) 77-91Kellner, M.I., Madachy,
	R.J., Raffo, D.M., Software process simulation modeling: Why? what?
	how? (1999) J. Systems and Software, 46 (2-3), pp. 113-122; Epping,
	A., Lott, C.M., Does software design complexity affect maintenance
	effort? (1994) Proc. 19th Softw. Eng, pp. 297-313. , Workshop; Boceo,
	M.G., Moody, D.L., Piattini, M., Assessing the capability of internal
	metrics as early indicators of maintenance effort through experimentation
	(2005) J. Software Maintenance and Evolution, 17 (3), pp. 225-246;
	Ramanujan, S., Scamell, R.W., Shah, J.R., An experimental investigation
	of the impact of individual, program, and organizational characteristics
	on software maintenance effort (2000) J. Systems and Software, 54,
	pp. 137-157; Kan, S.H., Dull, S.D., Amundson, D.N., Lindner, R.J.,
	Hedger, R.J., As/400 software quality management (1994) IBM Systems
	Journal, 33 (1), pp. 62-88; Remus, H., Integrated software validation
	in the view of inspections / reviews (1983) Proc. Symposium on Softw.
	Validation, pp. 57-64. , Elsevier; Musa, J.D., (1998) Software Reliability
	Engineering, , Osborne/McGraw-Hill; (1997) Sel (software engineering
	laboratory), , http://www.cebase.org, SEL: data; Defamie, M., Jacobs,
	P., Thollembeck, J., Software reliability: Assumptions, realities
	and data (1999) Proc. 1999 Intl. Conf. Softw. Maintenance (ICSM'99),
	pp. 337-345; Sargent, R.G., Validation and verification of simulation
	models (1999) Proc. 31st Conf. Winter Simulation, pp. 39-48; Cohen,
	S.: Predicting when product line investment pays. Technical Report
	Techinical Report CMU/SEI-2003-TN-017, Software Engineering Institute,
	Carnegie Mellon University (2003)Böckle, G., Clements, P., McGregor,
	J.D., Muthig, D., Schmid, K., Calculating roi for software product
	lines (2004) IEEE Software, 21 (3), pp. 32-38},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-37149008719&partnerID=40&md5=b4e7eb528a0a345611c8bbfb5412c11d}
}

@CONFERENCE{Pandey201316,
  author = {Pandey, P.},
  title = {Analysis of the techniques for software cost estimation},
  year = {2013},
  pages = {16-19},
  note = {cited By (since 1996)0},
  abstract = {One of the most valuable asset in any software industry is the correct
	estimation of effort and hence cost estimation of the software to
	be developed by them. Because of the highly dynamic nature of the
	Software development, it becomes more and more difficult to get a
	correct software effort estimation and software cost estimation,
	which is one of the most important factor which makes software more
	competitive and is essential for controlling Software Development
	Cost. Software Cost Estimation is one of the challenging managerial
	activity, because values of many of the variables are not known and
	not easy to predict at an early stage of Software Development. An
	ideal Software Cost Estimation Model should provide ample confidence,
	precision and accuracy from its predictions. In this paper, we have
	performed an analysis of most of the algorithmic techniques which
	has been developed till now for Software Cost Estimation. We have
	also tried to analyze the advantages and shortcomings of every technique.
	© 2013 IEEE.},
  affiliation = {GLA University, Mathura, India},
  art_number = {6524267},
  author_keywords = {COCOMO model; Non-parametric models; parametric models; Software Cost
	Estimation},
  document_type = {Conference Paper},
  journal = {International Conference on Advanced Computing and Communication
	Technologies, ACCT},
  references = {Boraso, M., Moutangero, C., Sedehi, B., (1996) Software Cost Estimation:
	An Experimental Study of Model Performances, , Technical Report TR-96-22,
	DEPARTIMENTO DI INFORMATATICA, UNIVERSITA DI PISA, Italy; Boehm,
	B.W., (1981) Software Engineering Economics, , Prentice-Hall; Boehm,
	B.W., (1995) Cost Models for Future Software Life Cycle Processes:
	COCOMO 2.0." Annals of Software Engineering on Software Process and
	Product Measurement, Amsterdam; Burgess, C.J., Lefley, M., (2001)
	Can Genetic Programming Improve Software Effort Estimation?" Information
	and Software Technology, 43, pp. 863-873; Lewis, J.P., Large limits
	to software estimation (2001) Software Engineering Notes, 26 (4).
	, July; Stamelos, Estimating the development cost of custom software
	(2003) Information and Management, 40 (8), pp. 729-741; Jensen, R.W.,
	(2004) Extreme Software Cost Estimating", CrossTalk, Journal of Defense
	Software Eng., Jan; Zull, J.E., (2002) The Art of Changing the Brain",
	Stylus Publishing, LLC; Hughes, R.T., (1996) Expert Judgment As An
	Estimating Method", Information & Soft. Technology, pp. 67-75; Jorgensen,
	M., Shepperd, M., A systematic review of software development cost
	estimation studies (2007) IEEE Transactions on Software Engineering,
	33 (1), pp. 33-53. , IEEE Computer Press, Washington D.C; Jun, E.S.,
	Lee, J.K., Quasi-optimal case-selective neural network model for
	software effort estimation (2001) Expert Systems with Applications,
	21 (1), pp. 1-14. , Elsevier, New York; Shepperd, M., Schofield,
	C., (1997) Estimating Software Project Effort Using Analogies." Transactions
	on Software Engineering, 23 (12), pp. 736-747; Srinivasan, K., Fisher,
	D., (1995) Machine Learning Approaches to Estimating Software Development
	Effort." IEEE Transactions on Software Engineering, 21 (2), pp. 126-136.
	, February; Vicinanza, S., Prietolla, M.J., (1990) Case-Based Reasoning
	in Software Effort Estimation." Proceedings of the 11th Nt. Conf.
	On Information Systems; Wittig, G., Finnie, G., (1997) Estimating
	Software Development Effort with Connectionist Models." Information
	and Software Technology, 39, pp. 469-476},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84881106980&partnerID=40&md5=cf228c39fcfde5d5af1e7928f0890962}
}

@ARTICLE{Reinhartz-Berger2013,
  author = {Reinhartz-Berger, I.a and Sturm, A.b and Wand, Y.c },
  title = {Comparing functionality of software systems: An ontological approach},
  journal = {Data and Knowledge Engineering},
  year = {2013},
  note = {cited By (since 1996)0; Article in Press},
  abstract = {Organizations can reduce the costs and enhance the quality of required
	software by adapting existing software systems. Software adaptation
	decisions often involve comparing alternatives on two criteria: (1)
	how well a system meets users' requirements and (2) the effort required
	for adapting the system. These criteria reflect two points of view
	- of users and of developers. Common to both views is the notion
	of functionality, which software developers have traditionally used
	for effort estimation utilizing concepts such as function points.
	However, users involved in selecting systems are not necessarily
	familiar with such concepts. We propose an approach for comparing
	software functionality from users' point of view. The approach employs
	ontological concepts to define functionality in terms of system behaviors.
	To evaluate whether or not the approach is also usable by software
	developers, we conducted an exploratory experiment. In the experiment,
	software engineering students ranked descriptions of software systems
	on the amount of changes needed to adapt the systems to given requirements.
	The results demonstrated that the ontological approach was usable
	after a short training and provided results comparable to ranking
	done by expert software developers. We also compared the ontological
	approach to a method which employed function point concepts. The
	results showed no statistically significant differences in performance,
	but there seemed to be an advantage to the ontological approach for
	cases that were difficult to analyze. Moreover, it took less time
	to apply the ontological approach than the function point-based approach,
	and the difference was statistically significant. © 2012 Elsevier
	B.V. All rights reserved.},
  affiliation = {Department of Information Systems, University of Haifa, Haifa 31905,
	Israel; Department of Information Systems Engineering, Ben-Gurion
	University of the Negev, Beer Sheva 84105, Israel; Sauder School
	of Business, University of British Columbia, Canada},
  author_keywords = {Development effort estimation; Function point analysis; Ontologies;
	Requirements engineering; Software comparison; Variability management},
  document_type = {Article in Press},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84872102278&partnerID=40&md5=9550bb003b9dc7dda7e59ece4912e66d}
}

@CONFERENCE{Sunkle20122,
  author = {Sunkle, S. and Kulkarni, V. and Roychoudhury, S.},
  title = {Measuring metadata-based aspect-oriented code in model-driven engineering},
  year = {2012},
  pages = {2-8},
  note = {cited By (since 1996)0},
  abstract = {Metrics measurement for cost estimation in model-driven engineering
	(MDE) is complex because of number of different artifacts that can
	potentially be generated. The complexity arises as auto-generated
	code, manually added code, and non-code artifacts must be sized separately
	for their contribution to overall effort. In this paper, we address
	measurement of a special kind of code artifacts called metadata-based
	aspect-oriented code. Our MDE toolset delivers large database-centric
	business-critical enterprise applications. We cater to special needs
	of enterprises by providing support for customization along three
	concerns, namely design strategies, architecture, and technology
	platforms (〈d, a, t〉) in customer-specific applications. Code
	that is generated for these customizations is conditional in nature,
	in the sense that model-to-text transformation takes place differently
	based on choices along these concerns. In our recent efforts to apply
	Constructive Cost Model (COCOMO) II to our MDE practices, we discovered
	that while the measurement of the rest of code and non-code artifacts
	can be easily automated, product-line-like nature of code generation
	for specifics of 〈d, a, t〉 requires special treatment. Our contribution
	is the use of feature models to capture variations in these dimensions
	and their mapping to code size estimates. Our initial implementation
	suggests that this approach scales well considering the size of our
	applications and takes a step forward in providing complete cost
	estimation for MDE applications using COCOMO II. © 2012 IEEE.},
  affiliation = {Tata Research Development and Design Center, Tata Consultancy Services,
	54B, Industrial Estate, Hadapsar, Pune, 411013, India},
  art_number = {6226990},
  document_type = {Conference Paper},
  journal = {2012 3rd International Workshop on Emerging Trends in Software Metrics,
	WETSoM 2012 - Proceedings},
  references = {Kulkarni, V., Reddy, S., Introducing MDA in a large IT consultancy
	organization (2006) APSEC, pp. 419-426. , IEEE Computer Society;
	Kulkarni, V., Reddy, S., A model-driven approach for developing business
	applications: Experience, lessons learnt and a way forward (2008)
	ISEC, pp. 21-28. , G. Shroff, P. Jalote, and S. K. Rajamani, Eds.
	ACM; Kulkarni, V., Reddy, S., An abstraction for reusable MDD components:
	Modelbased generation of model-based code generators (2008) GPCE,
	pp. 181-184. , Y. Smaragdakis and J. G. Siek, Eds. ACM; Kulkarni,
	V., Reddy, S., Rajbhoj, A., Scaling up modeldriven engineering -
	Experience and lessons learnt (2010) Lecture Notes in Computer Science,
	6395, pp. 331-345. , MoDELS (2), ser. D. C. Petriu, N. Rouquette,
	and ∅. Haugen, Eds., Springer; Kulkarni, V., Reddy, S., Model-driven
	development of enterprise applications (2004) Lecture Notes in Computer
	Science, 3297, pp. 118-128. , UML Satellite Activities, ser. N. J.
	Nunes, B. Selic, A. R. da Silva, and J. A. T. Álvarez, Eds., Springer;
	Barat, S., Kulkarni, V., Developing configurable extensible code
	generators for model-driven development approach (2010) SEKE, pp.
	577-582. , Knowledge Systems Institute Graduate School; Boehm, B.,
	Clark, Horowitz, Brown, Reifer, Chulani, Madachy, Bert, (2000) Software
	Cost Estimation with COCOMO II with CDROM, , 1st ed. Upper Saddle
	River, NJ, USA: Prentice Hall PTR; McDonald, P., Strickland, D.,
	Wildman, C., Estimating the effective size of auto-generated code
	in a large software project 17th International Forum on COCOMO®
	and Software Cost Modeling, October 2002; Jensen, D.R.W., Keth, D.,
	Costing issues related with auto-generated code (2009) Systems and
	Software Technology Conference - Track, p. 1. , april; Lum, K., Bramble,
	M., Hihn, J., Hackney, J., Khorrami, M., Monson, E., (2003) Handbook
	of Software Cost Estimation, , Jet Propulsion Laboratory, Tech. Rep.
	JPL D-26303, Rev. 0, May; Kulkarni, V., Reddy, S., Integrating aspects
	with model driven software development (2003) Software Engineering
	Research and Practice, pp. 186-197. , B. Al-Ani, H. R. Arabnia, and
	Y. Mun, Eds. CSREA Press; Czarnecki, K., Helsen, S., Eisenecker,
	U.W., Formalizing cardinality-based feature models and their specialization
	(2005) Software Process: Improvement and Practice, 10 (1), pp. 7-29;
	Kang, K., Cohen, S., Hess, J., Novak, W., Peterson, A., (1990) Feature-oriented
	Domain Analysis (FODA) Feasibility Study, , Software Engineering
	Institute, Carnegie Mellon University, Tech. Rep. CMU/SEI-90-TR-21;
	Liu, J., Feature interactions and software derivatives (2005) Journal
	of Object Technology, 4 (3), pp. 13-19. , Apr; Kim, S., Lively, W.,
	Simmons, D., An effort estimation by UML points in early stage of
	software development (2006) Software Engineering Research and Practice,
	pp. 415-421. , H. R. Arabnia and H. Reza, Eds. CSREA Press},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84864152347&partnerID=40&md5=cdcd52fc261af3bd866557974b3ffe76}
}

@CONFERENCE{Tanhaei201050,
  author = {Tanhaei, M. and Moaven, S. and Habibi, J. and Ahmadi, H.},
  title = {Toward a business model for software product line architecture},
  year = {2010},
  pages = {50-56},
  note = {cited By (since 1996)0},
  abstract = {Nowadays, software product line is an approach to reduce costs of
	software development, decrease time to market, and increase capabilities
	of reuse in designing and exploiting software development processes.
	Moreover, other quality attributes of the project domain should be
	considered to enhance quality of the product. Meanwhile, taking advantage
	of software product line makes developers capable of estimating development
	costs and time to market in a more realistic way. However, old approaches
	to estimate cost of development and foresee time to market are not
	suitable enough for software product line. In this paper, some important
	business parameters and a way to calculate cost and time to market
	in a product line are presented. Changing components among time,
	portion of the change in a specific product and organization issues
	are observed in the estimation function. © 2010 IEEE.},
  affiliation = {Department of Computer Engineering, Sharif University of Technology,
	Iran},
  art_number = {5489097},
  document_type = {Conference Paper},
  journal = {8th ACIS International Conference on Software Engineering Research,
	Management and Applications, SERA 2010},
  references = {Van Der Linden, F.J., Schmid, K., Rommes, E., (2007) Software Product
	Lines in Action, , Springer; Pohl, K., Boeckle, G., Van Der Linden,
	F., (2005) Software Product Line Engineering: Foundations, Principles,
	and Techniques, , Springer; Matinlassi, M., Comparison of software
	product line architecture design methods: Copa, FAST, FORM, KobrA
	and QADA (2004) Proceedings of the 26th International Conference
	on Software Engineering, pp. 127-136; Boehm, B., Abts, C., Brown,
	W., Chulani, S., Clark, B., Horowitz, R.E., (2000) Software Cost
	Estimation with COCOMO II, , New Jersey: Prentice Hall; Böckle,
	G., Clements, P., McGregor, J., Muthig, D., Schmid, K., Calculating
	ROI for software product lines (2004) IEEE Software, 21 (3), pp.
	23-31; Schmid, K., A quantitative model of the value of architecture
	in product line adoption (2003) Proceedings in the 5th International
	Workshop on Product Family Engineering (PFE'5); Schmid, K., Scoping
	software product lines - An analysis of an emerging technology (2000)
	Software Product Lines: Experience and Research Directions; Proceedings
	of the First Software Product Line Conference (SPLC1), pp. 513-532;
	Medvidovic, N., Taylor, R.N., A classification and comparison framework
	for software architecture description languages (2000) IEEE Transactions
	on Software Engineering, 26 (1), pp. 70-93; Medvidovic, N., Dashofy,
	E.M., Taylor, R.N., Moving architectural description from under the
	technology lamppost (2007) Information and Software Technology, 49,
	pp. 12-31; IEEE recommended practice for architectural descriptions
	of software-intensive systems (2000) IEEE Std-1471, , IEEE Computer
	society; Clements, P., Northrop, L., Northrop, L.M., (2001) Software
	Product Lines - Practices and Patterns, , 3rd ed.: Addison-Wesley
	Professional, August 30; Batory, D., Smaragdakis, Y., Building product-lines
	with mixin-layers (1999) ECOOP 99 Workshop on Product-Line Architectures;
	Ommering, R.V., Linden, F.V.D., Kramer, J., Magee, J., The koala
	component model for consumer electronics software (2000) IEEE Computer,
	33 (3), pp. 78-85; Van Ommering, R., Building product populations
	with software components (2002) Proceedings of ICSE'02, ACM, pp.
	255-265; America, P., Obbink, H., Muller, J., Van Ommering, R., COPA:
	A component-oriented platform architecting method for families of
	software intensive electronic products (2000) Denver, Colorado: The
	First Conference on Software Product Line Engineering; Haghpanah,
	N., Moaven, S.H., Habibi, J., Kargar, M., Hasas Yeganeh, S., Approximation
	algorithms for software component selection problem (2007) 14th Asia-Pacific
	Software Engineering Conference, pp. 159-166; Moaven, S., Ahmadi,
	H., Habibi, J., Kamandi, A., Decision support system environment
	for software architecture style selection (DESAS v1.0) (2009) Proc.
	of 21th Conference on Software Engineering and Knowledge Engineering
	SEKE'09, pp. 147-151. , Boston, USA, ISBN 1-891706-24-1; Moaven,
	S., Habibi, J., Ahmadi, H., Kamandi, A., A decision support system
	for software architecture styles selection (2008) Proc. of 6th International
	Conference on Software Engineering Research, Management and Applications
	(SERA2008), pp. 213-220. , Prague, Czech Republic, ISBN 978-0-7695-3302-5},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-77955318693&partnerID=40&md5=d32d1a460b092e04ca9985a24cdb6002}
}

@ARTICLE{2010,
  title = {Software Product Lines: Going Beyond - 14th International Conference,
	SPLC 2010, Proceedings},
  journal = {Lecture Notes in Computer Science (including subseries Lecture Notes
	in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year = {2010},
  volume = {6287 LNCS},
  note = {cited By (since 1996)0},
  __markedentry = {[vitorfs:1]},
  abstract = {The proceedings contain 60 papers. The topics discussed include: context-dependent
	product line practice for constructing reliable embedded systems;
	configuring software product line feature models based on stakeholders'
	soft and hard requirements; a flexible approach for generating product-specific
	documents in product lines; formal definition of syntax and semantics
	for documenting variability in activity diagrams; delta-oriented
	programming of software product lines; architecting automotive product
	lines: industrial practice; developing a software product line for
	train control: a case study of CVL; dealing with cost estimation
	in software product lines: experiences and future directions; variability
	modeling for distributed development - a comparison with established
	practice; consistent product line configuration across file type
	and product line boundaries; and improving the testing and testability
	of software product lines.},
  document_type = {Conference Review},
  page_count = {544},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-78049389332&partnerID=40&md5=058b7296efe50821678d8112952676ee}
}

@CONFERENCE{NoAuthor2004,
  title = {Proceedings - 2004 International Symposium on Empirical Software
	Engineering, ISESE 2004},
  year = {2004},
  note = {cited By (since 1996)0},
  __markedentry = {[vitorfs:1]},
  abstract = {The proceedings contain 26 papers from 2004 International Symposium
	on Empirical Software Engineering, ISESE 2004. The topics discussed
	include: the influence of the level of abstraction on the evolvability
	of conceptual models of information systems; the architectural change
	process; tool-supported unobtrusive evaluation of software engineering
	process conformance; analyzing systems failures through the use of
	case histories; investigation of the active guidance factor in reading
	techniques for defect detection; a software product line life cycle
	cost estimation model; and towards evidence in software engineering.},
  document_type = {Conference Review},
  journal = {Proceedings - 2004 International Symposium on Empirical Software
	Engineering, ISESE 2004},
  page_count = {290},
  source = {Scopus},
  url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-11244304384&partnerID=40&md5=b1ec2d1794465b1a0a51f571843724d5}
}

